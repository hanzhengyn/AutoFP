/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 11.0
 * Usage: Interface to C++
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#ifndef HCPP_HFEATURESET
#define HCPP_HFEATURESET

namespace HalconCpp
{

// Represents an instance of a training used for the classifier.
class LIntExport HFeatureSet : public HToolBase
{

public:

  // Create an uninitialized instance
  HFeatureSet():HToolBase() {}

  // Copy constructor
  HFeatureSet(const HFeatureSet& source) : HToolBase(source) {}

  // Create HFeatureSet from handle, taking ownership
  explicit HFeatureSet(Hlong handle);

  // Set new handle, taking ownership
  void SetHandle(Hlong handle);



/*****************************************************************************
 * Operator-based class constructors
 *****************************************************************************/

  // read_sampset: Read a training data set from a file.
  explicit HFeatureSet(const HString& FileName);

  // read_sampset: Read a training data set from a file.
  explicit HFeatureSet(const char* FileName);




  /***************************************************************************
   * Operators                                                               *
   ***************************************************************************/

  // Read a training data set from a file.
  void ReadSampset(const HString& FileName);

  // Read a training data set from a file.
  void ReadSampset(const char* FileName);

  // Train the classifier with one data set.
  void LearnSampsetBox(const HClassBox& ClassifHandle, const HString& Outfile, Hlong NSamples, double StopError, Hlong ErrorN) const;

  // Train the classifier with one data set.
  void LearnSampsetBox(const HClassBox& ClassifHandle, const char* Outfile, Hlong NSamples, double StopError, Hlong ErrorN) const;

  // Classify a set of arrays.
  double TestSampsetBox(const HClassBox& ClassifHandle) const;

};

class LIntExport HFeatureSetArray : public HToolArray
{
public:
  HFeatureSetArray();
  HFeatureSetArray(HFeatureSet* classes, Hlong length);
protected:
  virtual void CreateArray(Hlong length);
};

}

#endif
