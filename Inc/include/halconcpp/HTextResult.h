/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 11.0
 * Usage: Interface to C++
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#ifndef HCPP_HTEXTRESULT
#define HCPP_HTEXTRESULT

namespace HalconCpp
{

// Represents an instance of a text segmentations result.
class LIntExport HTextResult : public HToolBase
{

public:

  // Create an uninitialized instance
  HTextResult():HToolBase() {}

  // Copy constructor
  HTextResult(const HTextResult& source) : HToolBase(source) {}

  // Create HTextResult from handle, taking ownership
  explicit HTextResult(Hlong handle);

  // Set new handle, taking ownership
  void SetHandle(Hlong handle);



/*****************************************************************************
 * Operator-based class constructors
 *****************************************************************************/

  // find_text: Segment text in an image.
  explicit HTextResult(const HImage& Image, const HTextModel& TextModel);




  /***************************************************************************
   * Operators                                                               *
   ***************************************************************************/

  // Clear all text results.
  static void ClearAllTextResults();

  // Query an iconic value of a text segmentation result.
  HObject GetTextObject(const HTuple& ResultName) const;

  // Query an iconic value of a text segmentation result.
  HObject GetTextObject(const HString& ResultName) const;

  // Query an iconic value of a text segmentation result.
  HObject GetTextObject(const char* ResultName) const;

  // Query a control value of a text segmentation result.
  HTuple GetTextResult(const HTuple& ResultName) const;

  // Query a control value of a text segmentation result.
  HTuple GetTextResult(const HString& ResultName) const;

  // Query a control value of a text segmentation result.
  HTuple GetTextResult(const char* ResultName) const;

  // Segment text in an image.
  void FindText(const HImage& Image, const HTextModel& TextModel);

};

class LIntExport HTextResultArray : public HToolArray
{
public:
  HTextResultArray();
  HTextResultArray(HTextResult* classes, Hlong length);
protected:
  virtual void CreateArray(Hlong length);
};

}

#endif
