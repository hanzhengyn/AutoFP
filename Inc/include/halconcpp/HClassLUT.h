/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 11.0
 * Usage: Interface to C++
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#ifndef HCPP_HCLASSLUT
#define HCPP_HCLASSLUT

namespace HalconCpp
{

// Represents an instance of a classification lookup table
class LIntExport HClassLUT : public HToolBase
{

public:

  // Create an uninitialized instance
  HClassLUT():HToolBase() {}

  // Copy constructor
  HClassLUT(const HClassLUT& source) : HToolBase(source) {}

  // Create HClassLUT from handle, taking ownership
  explicit HClassLUT(Hlong handle);

  // Set new handle, taking ownership
  void SetHandle(Hlong handle);



/*****************************************************************************
 * Operator-based class constructors
 *****************************************************************************/

  // create_class_lut_knn: Create a look-up table using a k-nearest neighbors classifier (k-NN) to classify byte images.
  explicit HClassLUT(const HClassKnn& KNNHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

  // create_class_lut_gmm: Create a look-up table using a gaussian mixture model to classify byte images.
  explicit HClassLUT(const HClassGmm& GMMHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

  // create_class_lut_svm: Create a look-up table using a Support-Vector-Machine to classify byte images.
  explicit HClassLUT(const HClassSvm& SVMHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

  // create_class_lut_mlp: Create a look-up table using a multi-layer perceptron to classify byte images.
  explicit HClassLUT(const HClassMlp& MLPHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);




  /***************************************************************************
   * Operators                                                               *
   ***************************************************************************/

  // Classify a byte image using a look-up table.
  HRegion ClassifyImageClassLut(const HImage& Image) const;

  // Create a look-up table using a k-nearest neighbors classifier (k-NN) to classify byte images.
  void CreateClassLutKnn(const HClassKnn& KNNHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

  // Create a look-up table using a gaussian mixture model to classify byte images.
  void CreateClassLutGmm(const HClassGmm& GMMHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

  // Create a look-up table using a Support-Vector-Machine to classify byte images.
  void CreateClassLutSvm(const HClassSvm& SVMHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

  // Create a look-up table using a multi-layer perceptron to classify byte images.
  void CreateClassLutMlp(const HClassMlp& MLPHandle, const HTuple& GenParamNames, const HTuple& GenParamValues);

};

class LIntExport HClassLUTArray : public HToolArray
{
public:
  HClassLUTArray();
  HClassLUTArray(HClassLUT* classes, Hlong length);
protected:
  virtual void CreateArray(Hlong length);
};

}

#endif
