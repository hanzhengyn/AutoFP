/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 11.0
 * Usage: Interface to C++
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#ifndef HCPP_HTEXTMODEL
#define HCPP_HTEXTMODEL

namespace HalconCpp
{

// Represents an instance of a text model for text segmentations.
class LIntExport HTextModel : public HToolBase
{

public:

  // Copy constructor
  HTextModel(const HTextModel& source) : HToolBase(source) {}

  // Create HTextModel from handle, taking ownership
  explicit HTextModel(Hlong handle);

  // Set new handle, taking ownership
  void SetHandle(Hlong handle);



/*****************************************************************************
 * Operator-based class constructors
 *****************************************************************************/

  // create_text_model: Create a text model.
  explicit HTextModel();




  /***************************************************************************
   * Operators                                                               *
   ***************************************************************************/

  // Segment text in an image.
  HTextResult FindText(const HImage& Image) const;

  // Query parameters of a text model.
  HTuple GetTextModelParam(const HString& Param) const;

  // Query parameters of a text model.
  HTuple GetTextModelParam(const char* Param) const;

  // Set parameters of a text model.
  void SetTextModelParam(const HTuple& Param, const HTuple& Value) const;

  // Set parameters of a text model.
  void SetTextModelParam(const HString& Param, Hlong Value) const;

  // Set parameters of a text model.
  void SetTextModelParam(const char* Param, Hlong Value) const;

  // Create a text model.
  void CreateTextModel();

};

class LIntExport HTextModelArray : public HToolArray
{
public:
  HTextModelArray();
  HTextModelArray(HTextModel* classes, Hlong length);
protected:
  virtual void CreateArray(Hlong length);
};

}

#endif
