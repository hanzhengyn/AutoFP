/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 11.0
 * Usage: Interface to C++
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/


#ifndef HCPP_HEVENT
#define HCPP_HEVENT

namespace HalconCpp
{

// Represents an instance of an event synchronization object.
class LIntExport HEvent : public HToolBase
{

public:

  // Create an uninitialized instance
  HEvent():HToolBase() {}

  // Copy constructor
  HEvent(const HEvent& source) : HToolBase(source) {}

  // Create HEvent from handle, taking ownership
  explicit HEvent(Hlong handle);

  // Set new handle, taking ownership
  void SetHandle(Hlong handle);



/*****************************************************************************
 * Operator-based class constructors
 *****************************************************************************/

  // create_event: Create an event synchronization object.
  explicit HEvent(const HTuple& AttribName, const HTuple& AttribValue);

  // create_event: Create an event synchronization object.
  explicit HEvent(const HString& AttribName, const HString& AttribValue);

  // create_event: Create an event synchronization object.
  explicit HEvent(const char* AttribName, const char* AttribValue);




  /***************************************************************************
   * Operators                                                               *
   ***************************************************************************/

  // Unlock an event synchronization object. 
  void SignalEvent() const;

  // Lock an event synchronization object only it is unlocked.
  Hlong TryWaitEvent() const;

  // Lock an event synchronization object.
  void WaitEvent() const;

  // Create an event synchronization object.
  void CreateEvent(const HTuple& AttribName, const HTuple& AttribValue);

  // Create an event synchronization object.
  void CreateEvent(const HString& AttribName, const HString& AttribValue);

  // Create an event synchronization object.
  void CreateEvent(const char* AttribName, const char* AttribValue);

};

class LIntExport HEventArray : public HToolArray
{
public:
  HEventArray();
  HEventArray(HEvent* classes, Hlong length);
protected:
  virtual void CreateArray(Hlong length);
};

}

#endif
